{"ast":null,"code":"var _jsxFileName = \"/home/anil/Denso/new_ui/client/src/App.js\",\n  _s = $RefreshSig$();\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Papa from \"papaparse\";\nimport React, { useEffect, useState } from \"react\";\nimport { Area, AreaChart, CartesianGrid, Tooltip, XAxis, YAxis } from \"recharts\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [showValue1, setShowValue1] = useState(true);\n  const [showValue2, setShowValue2] = useState(true);\n  const [showValue3, setShowValue3] = useState(true);\n  const [showValue4, setShowValue4] = useState(true);\n  useEffect(() => {\n    Papa.parse(\"/all_logs.csv\", {\n      download: true,\n      header: false,\n      skipEmptyLines: true,\n      complete: results => {\n        // Skip the first line (header) and start parsing from the second line\n        const parsedData = results.data.slice(1).map(([time, cpu, memory, qm, avp]) => ({\n          time,\n          cpu: Number(cpu),\n          memory: Number(memory),\n          qm: Number(qm),\n          avp: Number(avp)\n        }));\n        setData(parsedData);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: \"Avg CPU Utilization\",\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: showValue1,\n          onChange: () => setShowValue1(!showValue1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: \"Avg Memory Utilization\",\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: showValue2,\n          onChange: () => setShowValue2(!showValue2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: \"QM\",\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: showValue3,\n          onChange: () => setShowValue3(!showValue3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: \"AVP\",\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: showValue4,\n          onChange: () => setShowValue4(!showValue4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AreaChart, {\n      width: 1500,\n      height: 500,\n      data: data,\n      margin: {\n        top: 100,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        domain: [0, 100],\n        ticks: Array.from({\n          length: 11\n        }, (_, i) => i * 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), showValue1 && /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"cpu\",\n        stroke: \"#8884d8\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), showValue2 && /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"memory\",\n        stroke: \"#82ca9d\",\n        fill: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), showValue3 && /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"qm\",\n        stroke: \"#ffc658\",\n        fill: \"#ffc658\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), showValue4 && /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"avp\",\n        stroke: \"#ff7300\" // Orange\n        ,\n        fill: \"#ff7300\" // Orange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YZSOX8D1CsuCDbCQMHo7RKi2flI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Checkbox","FormControlLabel","Papa","React","useEffect","useState","Area","AreaChart","CartesianGrid","Tooltip","XAxis","YAxis","jsxDEV","_jsxDEV","App","_s","data","setData","showValue1","setShowValue1","showValue2","setShowValue2","showValue3","setShowValue3","showValue4","setShowValue4","parse","download","header","skipEmptyLines","complete","results","parsedData","slice","map","time","cpu","memory","qm","avp","Number","children","className","label","control","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","ticks","Array","from","length","_","i","type","stroke","fill","_c","$RefreshReg$"],"sources":["/home/anil/Denso/new_ui/client/src/App.js"],"sourcesContent":["import Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Papa from \"papaparse\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [showValue1, setShowValue1] = useState(true);\n  const [showValue2, setShowValue2] = useState(true);\n  const [showValue3, setShowValue3] = useState(true);\n  const [showValue4, setShowValue4] = useState(true);\n\n  useEffect(() => {\n    Papa.parse(\"/all_logs.csv\", {\n      download: true,\n      header: false,\n      skipEmptyLines: true,\n      complete: (results) => {\n        // Skip the first line (header) and start parsing from the second line\n        const parsedData = results.data\n          .slice(1)\n          .map(([time, cpu, memory, qm, avp]) => ({\n            time,\n            cpu: Number(cpu),\n            memory: Number(memory),\n            qm: Number(qm),\n            avp: Number(avp),\n          }));\n        setData(parsedData);\n      },\n    });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"checkbox\">\n        <FormControlLabel\n          label=\"Avg CPU Utilization\"\n          control={\n            <Checkbox\n              checked={showValue1}\n              onChange={() => setShowValue1(!showValue1)}\n            />\n          }\n        />\n        <FormControlLabel\n          label=\"Avg Memory Utilization\"\n          control={\n            <Checkbox\n              checked={showValue2}\n              onChange={() => setShowValue2(!showValue2)}\n            />\n          }\n        />\n        <FormControlLabel\n          label=\"QM\"\n          control={\n            <Checkbox\n              checked={showValue3}\n              onChange={() => setShowValue3(!showValue3)}\n            />\n          }\n        />\n        <FormControlLabel\n          label=\"AVP\"\n          control={\n            <Checkbox\n              checked={showValue4}\n              onChange={() => setShowValue4(!showValue4)}\n            />\n          }\n        />\n      </div>\n      <AreaChart\n        width={1500}\n        height={500}\n        data={data}\n        margin={{\n          top: 100,\n          right: 30,\n          left: 0,\n          bottom: 0,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"time\" />\n        <YAxis\n          domain={[0, 100]}\n          ticks={Array.from({ length: 11 }, (_, i) => i * 10)}\n        />\n        <Tooltip />\n        {showValue1 && (\n          <Area type=\"monotone\" dataKey=\"cpu\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n        )}\n        {showValue2 && (\n          <Area\n            type=\"monotone\"\n            dataKey=\"memory\"\n            stroke=\"#82ca9d\"\n            fill=\"#82ca9d\"\n          />\n        )}\n        {showValue3 && (\n          <Area type=\"monotone\" dataKey=\"qm\" stroke=\"#ffc658\" fill=\"#ffc658\" />\n        )}\n        {showValue4 && (\n          <Area\n            type=\"monotone\"\n            dataKey=\"avp\"\n            stroke=\"#ff7300\" // Orange\n            fill=\"#ff7300\" // Orange\n          />\n        )}\n      </AreaChart>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}